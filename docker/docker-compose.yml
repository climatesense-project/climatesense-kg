volumes:
  virtuoso_data:
  postgres_data:

services:
  postgres:
    image: postgres:17-alpine
    container_name: climatesense-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-climatesense_cache}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-climatesense_cache}",
        ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s

  virtuoso:
    image: openlink/virtuoso-opensource-7:latest
    container_name: climatesense-virtuoso
    env_file: .env
    environment:
      DBA_PASSWORD: ${VIRTUOSO_PASSWORD:-dba}
      SPARQL_UPDATE: true
    ports:
      - "${VIRTUOSO_PORT:-8890}:8890"
    volumes:
      - virtuoso_data:/database
      - ./virtuoso/initdb.d:/initdb.d:ro
      - ../data:/database/data:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8890/sparql || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  isql-service:
    build:
      context: ./isql-service
      dockerfile: Dockerfile
    container_name: climatesense-isql
    environment:
      VIRTUOSO_HOST: virtuoso
      VIRTUOSO_ISQL_PORT: 1111
      VIRTUOSO_USER: dba
      VIRTUOSO_PASSWORD: ${VIRTUOSO_PASSWORD:-dba}
      HOST: 0.0.0.0
      PORT: 8080
    ports:
      - "${ISQL_SERVICE_PORT:-8080}:8080"
    depends_on:
      - virtuoso
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  pipeline:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: climatesense-pipeline
    environment:
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-climatesense_cache}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      VIRTUOSO_HOST: ${VIRTUOSO_HOST:-virtuoso}
      VIRTUOSO_PORT: ${VIRTUOSO_PORT:-8890}
      VIRTUOSO_USER: ${VIRTUOSO_USER:-dba}
      VIRTUOSO_PASSWORD: ${VIRTUOSO_PASSWORD:-dba}
      VIRTUOSO_ISQL_SERVICE_URL: http://isql-service:8080
      CIMPLE_FACTORS_API_URL: ${CIMPLE_FACTORS_API_URL:-http://localhost:8000}
    volumes:
      - ../data:/app/data
      - ../logs:/app/logs
      - ../cache:/app/cache
      - ../config:/app/config:ro
    profiles:
      - manual

  analytics-api:
    build:
      context: ..
      dockerfile: docker/analytics-api.Dockerfile
    container_name: climatesense-analytics-api
    environment:
      ANALYTICS_SPARQL_ENDPOINT: ${ANALYTICS_SPARQL_ENDPOINT:-http://virtuoso:8890/sparql}
      ANALYTICS_SPARQL_USER: ${ANALYTICS_SPARQL_USER:-}
      ANALYTICS_SPARQL_PASSWORD: ${ANALYTICS_SPARQL_PASSWORD:-}
      ANALYTICS_ALLOWED_ORIGINS: ${ANALYTICS_ALLOWED_ORIGINS:-http://localhost:3000}
      ANALYTICS_CACHE_TTL: ${ANALYTICS_CACHE_TTL:-60}
      ANALYTICS_SPARQL_TIMEOUT: ${ANALYTICS_SPARQL_TIMEOUT:-20}
    depends_on:
      - postgres
      - virtuoso
    ports:
      - "${ANALYTICS_API_PORT:-8000}:8000"
    restart: unless-stopped

  analytics-ui:
    build:
      context: ..
      dockerfile: apps/analytics-ui/Dockerfile
      args:
        NEXT_PUBLIC_ANALYTICS_API_URL: ${NEXT_PUBLIC_ANALYTICS_API_URL:-http://localhost:${ANALYTICS_API_PORT:-8000}}
    container_name: climatesense-analytics-ui
    depends_on:
      - analytics-api
    ports:
      - "${ANALYTICS_UI_PORT:-3000}:3000"
    restart: unless-stopped
